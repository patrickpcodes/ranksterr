"use client";

import React from "react"; // Import React
import type { Metadata } from "next";
import "@/styles/globals.css";
import TopBar from "@/app/components/TopBar";
import Sidebar from "@/app/components/Sidebar";

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// Client component for the layout
const ClientLayout = ({
  isSidebarOpen,
  toggleSidebar,
  children,
}: {
  isSidebarOpen: boolean;
  toggleSidebar: () => void;
  children: React.ReactNode;
}) => {
  return (
    <div
      className={`flex-1 flex flex-col h-screen transition-margin ${
        isSidebarOpen ? "ml-64" : "ml-0"
      }`}
    >
      <button
        onClick={toggleSidebar}
        className="p-2 bg-gray-800 text-white rounded-md m-4"
      >
        {isSidebarOpen ? (
          <span>&#10005; Close</span> // Close icon (X)
        ) : (
          <span>&#9776; Open</span> // Hamburger icon
        )}
      </button>
      <TopBar /> {/* Top bar displaying the current screen name */}
      <main className="flex-1 overflow-y-auto">{children}</main>{" "}
      {/* Allow scrolling in the main content */}
    </div>
  );
};

export const AppLayout = ({ children }: { children: React.ReactNode }) => {
  const [isSidebarOpen, setIsSidebarOpen] = React.useState(true); // State for sidebar visibility

  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };
  return (
    <div>
      <Sidebar isOpen={isSidebarOpen} /> {/* Pass the sidebar state */}
      <ClientLayout isSidebarOpen={isSidebarOpen} toggleSidebar={toggleSidebar}>
        {children}
      </ClientLayout>
    </div>
  );
};
// Main layout component
export default function Layout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      {" "}
      {/* Add the <html> tag */}
      <body>
        <AppLayout>{children}</AppLayout>
      </body>
    </html>
  );
}
